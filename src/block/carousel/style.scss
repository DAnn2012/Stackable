@import "common";

.stk-block-carousel {
	--gap: 30px;
	--slides-to-show: 1;
	--button-offset: 12px;
	--button-gap: 12px;
	--button-height: 40px;
	--button-width: 40px;
	--dot-size: 8px;
	--dot-gap: 16px;
	--dot-active-width: 30px;
	--dot-active-height: var(--dot-size, 8px);
	--dot-offset: 12px;
	--transition-duration: 0.3s;
}
.stk-block-carousel__slider {
	display: flex;
	flex-direction: row;
	cursor: grab;
	width: 100%;
	// This will make our slider draggable if columns do not have backgrounds or
	// do not occupy the entire width.
	background: transparent;
	margin: 0 auto;
	position: relative;
	overflow: hidden;
}
.stk-block-carousel__slider-wrapper {
	position: relative;
	z-index: 1; // For when the dots overlap the slider.
}
.stk-block-carousel__button,
.stk-block-carousel__dot {
	all: unset;
	cursor: pointer;
	transition: all 0.3s ease-in-out, outline-offset 0s, outline 0s;
	&::before {
		transition: all 0.3s ease-in-out;
	}
}

.stk-block-carousel__buttons {
	z-index: 9999;
	position: absolute;
	inset: var(--button-offset, 12px);
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	gap: var(--button-gap, 12px);
	pointer-events: none;
}
.stk-block-carousel__button {
	pointer-events: all;
	user-select: none;
}
.stk-block-carousel__dots {
	min-height: 24px;
	display: flex;
	flex-direction: row;
	justify-content: center;
	gap: min(var(--dot-gap), calc(var(--dot-gap) - (24px - var(--dot-size))));
	// Dot offset.
	z-index: 2;
	position: relative;
	margin-top: max(var(--dot-offset), -24px);
	top: min(0px, calc(var(--dot-offset) + 24px));
	li {
		list-style: none;
	}
}

.stk-block-carousel.stk--is-fade {
	.stk-block-carousel__slider > .stk-block-column {
		transition: opacity 0.3s ease-in-out;
		width: 100%;
		flex: 1 0 100%;
		opacity: 1;
		height: auto;
		// Use max so that the minimum delay is 0.01s. If the transition
		// duration is 0, this prevents the slides from blinking.
		transition-duration: max(calc(var(--transition-duration, 0.3s) * 1.15), 0.01s);
		transition-delay: calc(var(--transition-duration, 0.3s) * 0.3);
		&.stk-block-carousel__slide--active {
			transition-duration: var(--transition-duration, 0.3s);
			transition-delay: 0s;
		}
		&:not(:first-child) {
			position: relative;
			left: 0;
			visibility: hidden;
			opacity: 0;
		}
	}
}

.stk-block-carousel {
	&.stk--is-slide {
		.stk-block-carousel__slider:not(.stk--snapping-deactivated) {
			scroll-behavior: smooth;
			scroll-snap-type: inline mandatory;
		}
	}
	.stk-block-carousel__slider.stk--snapping-deactivated {
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-khtml-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}
}

.stk-block-carousel.stk--is-slide {
	.stk-block-carousel__slider {
		overflow-y: hidden;
		overflow-x: scroll;
		gap: var(--gap);
		overscroll-behavior-inline: contain;
		overflow-x: -moz-scrollbars-none;
		-ms-overflow-style: none;
		&::-webkit-scrollbar {
			height: 0 !important;
			display: none !important;
		}
	}
	.stk-block-carousel__slider > * {
		scroll-snap-align: start;
		flex: 1 0 calc(100% / var(--slides-to-show) - var(--gap) / var(--slides-to-show) * (var(--slides-to-show) - 1));
	}
}

.stk-block-carousel .stk--hidden {
	border: 0;
	clip: rect(0 0 0 0);
	-webkit-clip-path: inset(50%);
	clip-path: inset(50%);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	white-space: nowrap;
}

.stk-block-carousel__button {
	height: var(--button-height, 40px);
	width: var(--button-width, 40px);
	opacity: 0.9;
	border-radius: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	background: #fff;
	&:hover {
		background: #fff;
		opacity: 1;
	}
	svg {
		width: 16px;
		height: 16px;
	}
}
.stk-block-carousel__dot {
	height: max(24px, var(--dot-size, 8px));
	width: max(24px, var(--dot-size, 8px));
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	will-change: margin, margin-inline, width;
	&::before {
		position: absolute;
		content: "";
		width: var(--dot-size, 8px);
		height: var(--dot-size, 8px);
		border-radius: var(--dot-size, 8px);
		background: #aaa;
	}
	&:hover::before {
		background: #1b1b1b;
	}
	&.stk-block-carousel__dot--active {
		margin-inline: max(0px, calc((24px - var(--dot-size)) / 2));
		width: var(--dot-active-width, 30px);
		&::before {
			background: #1b1b1b;
			height: var(--dot-active-height);
			width: var(--dot-active-width, 30px);
		}
	}
}

// Hide arrows and dots on mobile
@include mobile {
	.stk-block-carousel.stk--hide-mobile-arrows > * > .stk-block-carousel__buttons {
		display: none;
	}
	.stk-block-carousel.stk--hide-mobile-dots > .stk-block-carousel__dots {
		display: none;
	}
}

// Outside arrows.
.stk-block-carousel.stk--arrows-outside.stk--arrows-justify-space-between.stk--arrows-align-center {
	.stk-block-carousel__buttons {
		inset: 0;
	}
	.stk-block-carousel__slider {
		width: calc(100% - 2 * var(--button-width) - 2 * var(--button-offset));
	}
}

.stk-block-carousel.stk--arrows-outside:is(.stk--arrows-align-flex-end, .stk--arrows-align-flex-start) {
	.stk-block-carousel__slider-wrapper {
		flex-direction: column;
		gap: var(--button-offset, 12px);
	}
	.stk-block-carousel__buttons {
		position: static;
	}
}

.stk-block-carousel.stk--arrows-outside.stk--arrows-align-flex-start {
	.stk-block-carousel__slider-wrapper {
		flex-direction: column-reverse;
	}
}
